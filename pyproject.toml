[project]
name = "letter_templates"
version = "0.3.0"
description = "A collection of templates for letters and invoices."
authors = [{ name = "Felix Hoffmann", email = "post@felix-hoffmann.dev" }]
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "email-validator>=2.2.0",
    "fire>=0.7.0",
    "jinja2>=3.1.4",
    "loguru>=0.7.2",
    "phonenumbers>=8.13.48",
    "pydantic>=2.9.2",
    "pydantic-extra-types>=2.9.0",
    "pypandoc-binary>=1.15",
    "pyyaml>=6.0.2",
    "typst>=0.13.2",
]

[dependency-groups]
types = ["types-pyyaml>=6.0.12.20240917"]
dev = ["pre-commit>=4.0.1", "ruff>=0.7.2"]

[tool.uv]
default-groups = ["dev", "types"]

[tool.ruff]
line-length = 120

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
extend-select = [
    "B",   # flake8-bugbear
    "C",   # flake8-comprehensions
    "ERA", # flake8-eradicate/eradicate
    "I",   # isort
    "N",   # pep8-naming
    "D",   # pydocstyle
    "PL",  # Pylint
    "PTH", # flake8-use-pathlib
    "PIE", # flake8-pie
    "PGH", # pygrep
    "SIM", # flake8-simplify
    "TC",  # flake8-type-checking
    "TID", # flake8-tidy-imports
    "UP",  # pyupgrade
    "RUF", # ruff
]
ignore = [
    "D100", # Missing docstring in public module
    "D102", # Missing docstring in public method
    "D104", # Missing docstring in public package
]

[tool.ruff.lint.pylint]
max-args = 10

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
